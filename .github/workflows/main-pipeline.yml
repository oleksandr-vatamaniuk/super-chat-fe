name: CI/CD Pipeline - Build, Publish, and Deploy
on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  IMAGE_NAME: oleksandrvatamaniuk/super-chat-react

jobs:
  unit-tests:
    name: Run Unit Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: yarn install
      - name: Run Unit Tests
        run: yarn test
  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [unit-tests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: yarn install
      - name: Build Project
        run: yarn build
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright E2E Tests
        run: yarn test:e2e:ci
  build-and-publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u oleksandrvatamaniuk --password-stdin

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker Image to Docker Hub
        run: docker push $IMAGE_NAME
  deploy:
    name: Deploy
    needs: [build-and-publish]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }} # Can be found as part of the Deploy Hook
          api-key: ${{ secrets.RENDER_API_KEY }} # Create your API key in Render Dashboard > Account Settings

